
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package net.maketendo.tardifmod.init;

import net.minecraftforge.registries.RegistryObject;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.DeferredRegister;

import net.minecraft.world.level.block.Block;

import net.maketendo.tardifmod.block.ZytonOreBlock;
import net.maketendo.tardifmod.block.Zyton7BlockBlock;
import net.maketendo.tardifmod.block.WhiteWallpaperStairsBlock;
import net.maketendo.tardifmod.block.WhiteWallpaperSlabBlock;
import net.maketendo.tardifmod.block.WhiteWallpaperBlock;
import net.maketendo.tardifmod.block.WallpaperRoundelDoorBlock;
import net.maketendo.tardifmod.block.WallpaperRoundelBlock;
import net.maketendo.tardifmod.block.TwelvethRotorBlock;
import net.maketendo.tardifmod.block.TimeMovementCarpetControlBlock;
import net.maketendo.tardifmod.block.TheMomentBlock;
import net.maketendo.tardifmod.block.TenthRotorBlock;
import net.maketendo.tardifmod.block.TelapathicCarpetControlBlock;
import net.maketendo.tardifmod.block.TallWallpaperRoundelDoorBlock;
import net.maketendo.tardifmod.block.TallRoundelDoorBlock;
import net.maketendo.tardifmod.block.TallMintRoundelDoorBlock;
import net.maketendo.tardifmod.block.TARDISMaintenanceEngineBlock;
import net.maketendo.tardifmod.block.TARDISInteriorDoorBlock;
import net.maketendo.tardifmod.block.TARDISExteriorBlock;
import net.maketendo.tardifmod.block.SolderOreBlock;
import net.maketendo.tardifmod.block.Skarowood2Block;
import net.maketendo.tardifmod.block.SkaroStoneBlock;
import net.maketendo.tardifmod.block.SkaroSandBlock;
import net.maketendo.tardifmod.block.SkaroPlanksBlock;
import net.maketendo.tardifmod.block.SkaroLogsBlock;
import net.maketendo.tardifmod.block.SkaroGrassBlock;
import net.maketendo.tardifmod.block.SkaroDirtBlock;
import net.maketendo.tardifmod.block.SkaroCobbleBlock;
import net.maketendo.tardifmod.block.SgrassBlock;
import net.maketendo.tardifmod.block.RoundelDoorBlock;
import net.maketendo.tardifmod.block.RoundelBlock;
import net.maketendo.tardifmod.block.RotorBlock;
import net.maketendo.tardifmod.block.RawDalekiumBlockBlock;
import net.maketendo.tardifmod.block.Plastic_ChunkOreBlock;
import net.maketendo.tardifmod.block.PlainWallpaperStairBlock;
import net.maketendo.tardifmod.block.PlainWallpaperSlabBlock;
import net.maketendo.tardifmod.block.PlainWallpaperBlock;
import net.maketendo.tardifmod.block.PhoneboxDecorationBlock;
import net.maketendo.tardifmod.block.Nitro9Block;
import net.maketendo.tardifmod.block.MonitorBlock;
import net.maketendo.tardifmod.block.MintWallpaperStairsBlock;
import net.maketendo.tardifmod.block.MintWallpaperSlabBlock;
import net.maketendo.tardifmod.block.MintWallpaperBlock;
import net.maketendo.tardifmod.block.MintRoundelDoorBlock;
import net.maketendo.tardifmod.block.MintRoundelBlock;
import net.maketendo.tardifmod.block.MelartBlockBlock;
import net.maketendo.tardifmod.block.HexagonalFrameOffsetBlock;
import net.maketendo.tardifmod.block.HexagonalFrameCenteredBlock;
import net.maketendo.tardifmod.block.HexagonRoundelBlock;
import net.maketendo.tardifmod.block.FourthRotorBlock;
import net.maketendo.tardifmod.block.FourteenthRotorBlock;
import net.maketendo.tardifmod.block.FoodCubeMachineBlock;
import net.maketendo.tardifmod.block.FifthRotorBlock;
import net.maketendo.tardifmod.block.EleventhToyotaRotorBlock;
import net.maketendo.tardifmod.block.EleventhRotorBlock;
import net.maketendo.tardifmod.block.EighthRotorBlock;
import net.maketendo.tardifmod.block.DrainedZyton7BlockBlock;
import net.maketendo.tardifmod.block.DimensionalSelectorCarpetControlBlock;
import net.maketendo.tardifmod.block.DematerialisationCarpetControlBlock;
import net.maketendo.tardifmod.block.DalekiumRefineryBlock;
import net.maketendo.tardifmod.block.DalekiumOreBlock;
import net.maketendo.tardifmod.block.DalekiumBlockBlock;
import net.maketendo.tardifmod.block.CoordinateTravelCarpetControlBlock;
import net.maketendo.tardifmod.block.CogRoundelBlock;
import net.maketendo.tardifmod.block.ClassicgrassBlock;
import net.maketendo.tardifmod.block.ClassicYellowWoolBlock;
import net.maketendo.tardifmod.block.ClassicWhiteWoolBlock;
import net.maketendo.tardifmod.block.ClassicTealWoolBlock;
import net.maketendo.tardifmod.block.ClassicStoneBlock;
import net.maketendo.tardifmod.block.ClassicSandBlock;
import net.maketendo.tardifmod.block.ClassicRedWoolBlock;
import net.maketendo.tardifmod.block.ClassicPurpleWoolBlock;
import net.maketendo.tardifmod.block.ClassicOrangeWoolBlock;
import net.maketendo.tardifmod.block.ClassicNetherackBlock;
import net.maketendo.tardifmod.block.ClassicMagentaWoolBlock;
import net.maketendo.tardifmod.block.ClassicLogBlock;
import net.maketendo.tardifmod.block.ClassicLimeWoolBlock;
import net.maketendo.tardifmod.block.ClassicLightGrayWoolBlock;
import net.maketendo.tardifmod.block.ClassicLeavesBlock;
import net.maketendo.tardifmod.block.ClassicIndigoWoolBlock;
import net.maketendo.tardifmod.block.ClassicGreenWoolBlock;
import net.maketendo.tardifmod.block.ClassicGrayWoolBlock;
import net.maketendo.tardifmod.block.ClassicDirtBlock;
import net.maketendo.tardifmod.block.ClassicCyanWoolBlock;
import net.maketendo.tardifmod.block.ClassicBlueWoolBlock;
import net.maketendo.tardifmod.block.ClassicAquaWoolBlock;
import net.maketendo.tardifmod.TardifModMod;

public class TardifModModBlocks {
	public static final DeferredRegister<Block> REGISTRY = DeferredRegister.create(ForgeRegistries.BLOCKS, TardifModMod.MODID);
	public static final RegistryObject<Block> ROUNDEL_DOOR = REGISTRY.register("roundel_door", () -> new RoundelDoorBlock());
	public static final RegistryObject<Block> ROUNDEL = REGISTRY.register("roundel", () -> new RoundelBlock());
	public static final RegistryObject<Block> CLASSICGRASS = REGISTRY.register("classicgrass", () -> new ClassicgrassBlock());
	public static final RegistryObject<Block> CLASSIC_STONE = REGISTRY.register("classic_stone", () -> new ClassicStoneBlock());
	public static final RegistryObject<Block> CLASSIC_SAND = REGISTRY.register("classic_sand", () -> new ClassicSandBlock());
	public static final RegistryObject<Block> CLASSIC_LEAVES = REGISTRY.register("classic_leaves", () -> new ClassicLeavesBlock());
	public static final RegistryObject<Block> CLASSIC_LOG = REGISTRY.register("classic_log", () -> new ClassicLogBlock());
	public static final RegistryObject<Block> CLASSIC_DIRT = REGISTRY.register("classic_dirt", () -> new ClassicDirtBlock());
	public static final RegistryObject<Block> PLASTIC_ORE = REGISTRY.register("plastic_ore", () -> new Plastic_ChunkOreBlock());
	public static final RegistryObject<Block> CLASSIC_NETHERACK = REGISTRY.register("classic_netherack", () -> new ClassicNetherackBlock());
	public static final RegistryObject<Block> MONITOR = REGISTRY.register("monitor", () -> new MonitorBlock());
	public static final RegistryObject<Block> MINT_ROUNDEL = REGISTRY.register("mint_roundel", () -> new MintRoundelBlock());
	public static final RegistryObject<Block> MINT_ROUNDEL_DOOR = REGISTRY.register("mint_roundel_door", () -> new MintRoundelDoorBlock());
	public static final RegistryObject<Block> ROTOR = REGISTRY.register("rotor", () -> new RotorBlock());
	public static final RegistryObject<Block> SOLDER_ORE = REGISTRY.register("solder_ore", () -> new SolderOreBlock());
	public static final RegistryObject<Block> ZYTON_7_BLOCK = REGISTRY.register("zyton_7_block", () -> new Zyton7BlockBlock());
	public static final RegistryObject<Block> DRAINED_ZYTON_7_BLOCK = REGISTRY.register("drained_zyton_7_block", () -> new DrainedZyton7BlockBlock());
	public static final RegistryObject<Block> ZYTON_ORE = REGISTRY.register("zyton_ore", () -> new ZytonOreBlock());
	public static final RegistryObject<Block> CLASSIC_WHITE_WOOL = REGISTRY.register("classic_white_wool", () -> new ClassicWhiteWoolBlock());
	public static final RegistryObject<Block> CLASSIC_LIGHT_GRAY_WOOL = REGISTRY.register("classic_light_gray_wool", () -> new ClassicLightGrayWoolBlock());
	public static final RegistryObject<Block> FOOD_CUBE_MACHINE = REGISTRY.register("food_cube_machine", () -> new FoodCubeMachineBlock());
	public static final RegistryObject<Block> CLASSIC_GRAY_WOOL = REGISTRY.register("classic_gray_wool", () -> new ClassicGrayWoolBlock());
	public static final RegistryObject<Block> CLASSIC_YELLOW_WOOL = REGISTRY.register("classic_yellow_wool", () -> new ClassicYellowWoolBlock());
	public static final RegistryObject<Block> CLASSIC_BLUE_WOOL = REGISTRY.register("classic_blue_wool", () -> new ClassicBlueWoolBlock());
	public static final RegistryObject<Block> CLASSIC_AQUA_WOOL = REGISTRY.register("classic_aqua_wool", () -> new ClassicAquaWoolBlock());
	public static final RegistryObject<Block> CLASSIC_CYAN_WOOL = REGISTRY.register("classic_cyan_wool", () -> new ClassicCyanWoolBlock());
	public static final RegistryObject<Block> CLASSIC_GREEN_WOOL = REGISTRY.register("classic_green_wool", () -> new ClassicGreenWoolBlock());
	public static final RegistryObject<Block> CLASSIC_LIME_WOOL = REGISTRY.register("classic_lime_wool", () -> new ClassicLimeWoolBlock());
	public static final RegistryObject<Block> CLASSIC_TEAL_WOOL = REGISTRY.register("classic_teal_wool", () -> new ClassicTealWoolBlock());
	public static final RegistryObject<Block> CLASSIC_PURPLE_WOOL = REGISTRY.register("classic_purple_wool", () -> new ClassicPurpleWoolBlock());
	public static final RegistryObject<Block> CLASSIC_INDIGO_WOOL = REGISTRY.register("classic_indigo_wool", () -> new ClassicIndigoWoolBlock());
	public static final RegistryObject<Block> CLASSIC_MAGENTA_WOOL = REGISTRY.register("classic_magenta_wool", () -> new ClassicMagentaWoolBlock());
	public static final RegistryObject<Block> CLASSIC_RED_WOOL = REGISTRY.register("classic_red_wool", () -> new ClassicRedWoolBlock());
	public static final RegistryObject<Block> CLASSIC_ORANGE_WOOL = REGISTRY.register("classic_orange_wool", () -> new ClassicOrangeWoolBlock());
	public static final RegistryObject<Block> TARDIS_EXTERIOR = REGISTRY.register("tardis_exterior", () -> new TARDISExteriorBlock());
	public static final RegistryObject<Block> THE_MOMENT = REGISTRY.register("the_moment", () -> new TheMomentBlock());
	public static final RegistryObject<Block> TARDIS_MAINTENANCE_ENGINE = REGISTRY.register("tardis_maintenance_engine", () -> new TARDISMaintenanceEngineBlock());
	public static final RegistryObject<Block> PHONEBOX_DECORATION = REGISTRY.register("phonebox_decoration", () -> new PhoneboxDecorationBlock());
	public static final RegistryObject<Block> SKARO_DIRT = REGISTRY.register("skaro_dirt", () -> new SkaroDirtBlock());
	public static final RegistryObject<Block> DALEKIUM_ORE = REGISTRY.register("dalekium_ore", () -> new DalekiumOreBlock());
	public static final RegistryObject<Block> SKARO_LOGS = REGISTRY.register("skaro_logs", () -> new SkaroLogsBlock());
	public static final RegistryObject<Block> SKARO_STONE = REGISTRY.register("skaro_stone", () -> new SkaroStoneBlock());
	public static final RegistryObject<Block> RAW_DALEKIUM_BLOCK = REGISTRY.register("raw_dalekium_block", () -> new RawDalekiumBlockBlock());
	public static final RegistryObject<Block> SKARO_PLANKS = REGISTRY.register("skaro_planks", () -> new SkaroPlanksBlock());
	public static final RegistryObject<Block> SKARO_COBBLE = REGISTRY.register("skaro_cobble", () -> new SkaroCobbleBlock());
	public static final RegistryObject<Block> SKARO_GRASS = REGISTRY.register("skaro_grass", () -> new SkaroGrassBlock());
	public static final RegistryObject<Block> SKARO_SAND = REGISTRY.register("skaro_sand", () -> new SkaroSandBlock());
	public static final RegistryObject<Block> MELART_BLOCK = REGISTRY.register("melart_block", () -> new MelartBlockBlock());
	public static final RegistryObject<Block> NITRO_9 = REGISTRY.register("nitro_9", () -> new Nitro9Block());
	public static final RegistryObject<Block> DALEKIUM_REFINERY = REGISTRY.register("dalekium_refinery", () -> new DalekiumRefineryBlock());
	public static final RegistryObject<Block> DALEKIUM_BLOCK = REGISTRY.register("dalekium_block", () -> new DalekiumBlockBlock());
	public static final RegistryObject<Block> SKAROWOOD_2 = REGISTRY.register("skarowood_2", () -> new Skarowood2Block());
	public static final RegistryObject<Block> WALLPAPER_ROUNDEL = REGISTRY.register("wallpaper_roundel", () -> new WallpaperRoundelBlock());
	public static final RegistryObject<Block> WALLPAPER_ROUNDEL_DOOR = REGISTRY.register("wallpaper_roundel_door", () -> new WallpaperRoundelDoorBlock());
	public static final RegistryObject<Block> PLAIN_WALLPAPER = REGISTRY.register("plain_wallpaper", () -> new PlainWallpaperBlock());
	public static final RegistryObject<Block> HEXAGON_ROUNDEL = REGISTRY.register("hexagon_roundel", () -> new HexagonRoundelBlock());
	public static final RegistryObject<Block> MINT_WALLPAPER = REGISTRY.register("mint_wallpaper", () -> new MintWallpaperBlock());
	public static final RegistryObject<Block> WHITE_WALLPAPER = REGISTRY.register("white_wallpaper", () -> new WhiteWallpaperBlock());
	public static final RegistryObject<Block> PLAIN_WALLPAPER_SLAB = REGISTRY.register("plain_wallpaper_slab", () -> new PlainWallpaperSlabBlock());
	public static final RegistryObject<Block> PLAIN_WALLPAPER_STAIR = REGISTRY.register("plain_wallpaper_stair", () -> new PlainWallpaperStairBlock());
	public static final RegistryObject<Block> WHITE_WALLPAPER_SLAB = REGISTRY.register("white_wallpaper_slab", () -> new WhiteWallpaperSlabBlock());
	public static final RegistryObject<Block> WHITE_WALLPAPER_STAIRS = REGISTRY.register("white_wallpaper_stairs", () -> new WhiteWallpaperStairsBlock());
	public static final RegistryObject<Block> MINT_WALLPAPER_SLAB = REGISTRY.register("mint_wallpaper_slab", () -> new MintWallpaperSlabBlock());
	public static final RegistryObject<Block> MINT_WALLPAPER_STAIRS = REGISTRY.register("mint_wallpaper_stairs", () -> new MintWallpaperStairsBlock());
	public static final RegistryObject<Block> TALL_ROUNDEL_DOOR = REGISTRY.register("tall_roundel_door", () -> new TallRoundelDoorBlock());
	public static final RegistryObject<Block> TALL_WALLPAPER_ROUNDEL_DOOR = REGISTRY.register("tall_wallpaper_roundel_door", () -> new TallWallpaperRoundelDoorBlock());
	public static final RegistryObject<Block> TALL_MINT_ROUNDEL_DOOR = REGISTRY.register("tall_mint_roundel_door", () -> new TallMintRoundelDoorBlock());
	public static final RegistryObject<Block> HEXAGONAL_FRAME_CENTERED = REGISTRY.register("hexagonal_frame_centered", () -> new HexagonalFrameCenteredBlock());
	public static final RegistryObject<Block> HEXAGONAL_FRAME_OFFSET = REGISTRY.register("hexagonal_frame_offset", () -> new HexagonalFrameOffsetBlock());
	public static final RegistryObject<Block> TARDIS_INTERIOR_DOOR = REGISTRY.register("tardis_interior_door", () -> new TARDISInteriorDoorBlock());
	public static final RegistryObject<Block> DEMATERIALISATION_CARPET_CONTROL = REGISTRY.register("dematerialisation_carpet_control", () -> new DematerialisationCarpetControlBlock());
	public static final RegistryObject<Block> SGRASS = REGISTRY.register("sgrass", () -> new SgrassBlock());
	public static final RegistryObject<Block> TIME_MOVEMENT_CARPET_CONTROL = REGISTRY.register("time_movement_carpet_control", () -> new TimeMovementCarpetControlBlock());
	public static final RegistryObject<Block> DIMENSIONAL_SELECTOR_CARPET_CONTROL = REGISTRY.register("dimensional_selector_carpet_control", () -> new DimensionalSelectorCarpetControlBlock());
	public static final RegistryObject<Block> COORDINATE_TRAVEL_CARPET_CONTROL = REGISTRY.register("coordinate_travel_carpet_control", () -> new CoordinateTravelCarpetControlBlock());
	public static final RegistryObject<Block> TELAPATHIC_CARPET_CONTROL = REGISTRY.register("telapathic_carpet_control", () -> new TelapathicCarpetControlBlock());
	public static final RegistryObject<Block> FOURTEENTH_ROTOR = REGISTRY.register("fourteenth_rotor", () -> new FourteenthRotorBlock());
	public static final RegistryObject<Block> TWELVETH_ROTOR = REGISTRY.register("twelveth_rotor", () -> new TwelvethRotorBlock());
	public static final RegistryObject<Block> ELEVENTH_ROTOR = REGISTRY.register("eleventh_rotor", () -> new EleventhRotorBlock());
	public static final RegistryObject<Block> ELEVENTH_TOYOTA_ROTOR = REGISTRY.register("eleventh_toyota_rotor", () -> new EleventhToyotaRotorBlock());
	public static final RegistryObject<Block> TENTH_ROTOR = REGISTRY.register("tenth_rotor", () -> new TenthRotorBlock());
	public static final RegistryObject<Block> EIGHTH_ROTOR = REGISTRY.register("eighth_rotor", () -> new EighthRotorBlock());
	public static final RegistryObject<Block> FIFTH_ROTOR = REGISTRY.register("fifth_rotor", () -> new FifthRotorBlock());
	public static final RegistryObject<Block> FOURTH_ROTOR = REGISTRY.register("fourth_rotor", () -> new FourthRotorBlock());
	public static final RegistryObject<Block> COG_ROUNDEL = REGISTRY.register("cog_roundel", () -> new CogRoundelBlock());
	// Start of user code block custom blocks
	// End of user code block custom blocks
}
